<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-5.2.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
       ">

	<bean id="userDao" class="sopo.cn.spring5.dao.UserDaoImpl"></bean>
	<bean id="user" scope="prototype" class="sopo.cn.spring5.model.User">
		<property name="username" value="admin"></property>
		<property name="password" value="admin123"></property>
	</bean>

	<bean id="account" scope="prototype"
		class="sopo.cn.spring5.model.Account">
		<property name="name" value="I am Spring IOC 1" />
		<property name="pwd" value="123" />
		<!-- 注入map -->
		<property name="books">
			<map>
				<entry key="10" value="CoreJava" />
				<entry key="11" value="JavaWeb" />
				<entry key="12" value="SSH2" />
			</map>
		</property>
		<!-- 注入set -->
		<property name="fridends">
			<set>
				<value>张龙</value>
				<value>老郭</value>
				<value>老李</value>
			</set>
		</property>
		<!-- 注入list -->
		<property name="cities">
			<list>
				<value>北</value>
				<value>上</value>
				<value>广</value>
				<value>深</value>
			</list>
		</property>
	</bean>

	<bean name="propertiesDemo"
		class="sopo.cn.spring5.test.PropertiesDemo">
		<property name="propertie">
			<props>
				<prop key="username">lyhjjek.{2}$</prop>
				<prop key="pswd">218L.{8}$</prop>
				<prop key="cdataTest"><![CDATA[zg!!F@ZmR,>_<>]]></prop>
			</props>
		</property>
	</bean>
	
	<bean name="c3p0" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="root"></property>
		<property name="password" value="jlq3j495ujlj"></property>
		<property name="driverClass" value="com.mysql.cj.jdbc.Driver"></property>
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/myemployees?serverTimezone=Asia/Shanghai"></property>
	</bean>

	<!-- 练习用途代码，没有实质作用 -->
	<util:list id="set1">
		<ref bean="userDao" />
		<ref bean="user" />
	</util:list>

	<!-- 练习用途代码，没有实质作用 -->
	<!-- <bean id="accountTtt" scope="prototype" class="sopo.cn.spring5.model.Account"> 
		<property name="name"> <value><![CDATA[<as>><*&(I)]]></value> </property> 
		</bean> -->
	<!-- ########################################## jdbc.properties -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	
	<bean id="c3p02" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${driverClass}"></property>
		<property name="jdbcUrl" value="${jdbcUrl}"></property>
		<property name="user" value="${user}"></property>
		<property name="password" value="${password}"></property>
	</bean>
	
	<bean id="user0102" class="sopo.cn.spring5.model.User">
		<property name="username" value="#{'usr1'}"></property>
		<property name="password" value="#{T(java.lang.Math).E}"></property>
	</bean>
	
	<bean id="PC1" class="sopo.cn.spring5.model.PC">
		<!-- <property name="brand" value="#{user0102.username}"></property> -->
		<!-- <property name="brand" value="#{user0102.testSpElMethod()}"></property> -->
		<!-- <property name="brand" value="#{user0102.username.equals('usr1') ? 'hp' : 'dell'}"></property> -->
		<!-- <property name="brand" value="#{'ada100' matches '[0-9]+'}"></property> -->
		<property name="brand" value="dell"></property>
		<property name="user" value="#{user0102}"></property>
		<property name="testLists" value="#{account.cities[0]}"></property>
		<property name="testSet" value="#{account.fridends[1]}"></property>
		<property name="testBooksMap" value="#{account.books['11']}"></property>
	</bean>
	
	<!-- <bean id="life_singleton" class="sopo.cn.spring5.model.LifeBean" init-method="initTest" destroy-method="destroy">
		<property name="name" value="testLifeBean"></property>
	</bean> --><!-- 初始化和销毁方法 -->
	
	<!-- <bean class="sopo.cn.spring5.util.MyBBP"></bean> --><!-- 前后置处理方法 -->
	
	<bean id="bmwCar" class="sopo.cn.spring5.util.CarStaticFactory" factory-method="getCar">
		<constructor-arg value="3"></constructor-arg>
	</bean>
	
	<bean id="carFactory" class="sopo.cn.spring5.util.CarInstanceFactory">
		<property name="map">
			<map>
				<entry key="1">
					<bean class="sopo.cn.spring5.model.Car">
						<property name="id" value="1"></property>
						<property name="name" value="volvo"></property>
						<property name="price" value="500000"></property>
					</bean>
				</entry>
			</map>
		</property>
	</bean>
	<bean id="car" factory-bean="carFactory" factory-method="getCar">
		<constructor-arg value="1"></constructor-arg>
	</bean>
	
	<bean id="car1" class="sopo.cn.spring5.util.CarFactoryBean">
		<property name="name" value="ford"></property>
	</bean>
	<!-- ########################################### -->
	<context:component-scan base-package="sopo.cn.spring5"></context:component-scan>
	
	<bean id="java" class="sopo.cn.spring5.model.Java">
		<property name="score">
			<value>80.5</value>
		</property>
	</bean>
	
	<bean id="Math" class="sopo.cn.spring5.model.Math">
		<property name="score">
			<value>77.5</value>
		</property>
	</bean>
	
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<aop:config>
		<!-- 配置切面点表达式 -->
		<aop:pointcut expression="execution( * sopo.cn.spring5.test.*.*(..))" id="poiontCut"/>
		<!-- 配置切面和通知 -->
		<aop:aspect ref="xmlLoggerAspect" order="1">
			<aop:before method="beforeMethod" pointcut-ref="poiontCut"/>
			<aop:before method="afterMethod" pointcut-ref="poiontCut"/>
		</aop:aspect>
	</aop:config>
	
	<bean id="datasource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="${user}"></property>
		<property name="password" value="${password}"></property>
		<property name="driverClass" value="${driverClass}"></property>
		<property name="jdbcUrl" value="${jdbcUrl}"></property>
		<property name="acquireIncrement" value="${acquireIncrement}"></property>
		<property name="initialPoolSize" value="${initialPoolSize}"></property>
		<property name="minPoolSize" value="${minPoolSize}"></property>
		<property name="maxPoolSize" value="${maxPoolSize}"></property>
		<property name="maxStatements" value="${maxStatements}"></property>
		<property name="maxStatementsPerConnection" value="${maxStatementsPerConnection}"></property>
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="datasource"></property>
	</bean>
	
	<bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="datasource"></constructor-arg>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="datasource"></property>
	</bean>
	
	<!-- <tx:annotation-driven transaction-manager="transactionManager"/> -->
	
	<!-- 配置事务属性 -->
	<tx:advice id = "txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- <tx:method name="*"/> -->
			<tx:method name="get*" read-only="true"/>
			<tx:method name="find*" read-only="true"/>
			<tx:method name="select*" read-only="true"/>
			<tx:method name="*" read-only="false"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 配置事务的切入点 -->
	<aop:config>
		<aop:pointcut expression="execution( * sopo.cn.spring5.demo.*.*.*( ..))" id="txPointCut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
	</aop:config>
	
</beans>
